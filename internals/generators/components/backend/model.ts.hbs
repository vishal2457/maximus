import { DataTypes } from "sequelize";
import { G_Model } from "../../../types/shared";
import DbConnection from "../../../core/db/db";
import { T{{properCase name}} } from "tp-schema";

interface {{properCase name}} extends G_Model<{{properCase name}}>, T{{properCase name}} {}
export const {{properCase name}} = DbConnection.db.define<{{properCase name}}>(
  "{{properCase name}}",
  {
  {{#each schemaValue.properties}}
      {{@key}}: {
        {{#if this.enumValues}}
         type: DataTypes.ENUM({ values: {{{this.enumValues}}} }),
          {{else}}
          type: DataTypes.{{this.dataType}},
         {{/if}}
        {{#if this.required}}
          allowNull: false,
        {{/if}}
        {{#if this.primary}}
          primaryKey: true,
        {{/if}}
        {{#if this.primary}}
          unique: true,
        {{/if}}
        {{#if this.defaultValue}}
          defaultValue: {{this.defaultValue}},
        {{/if}}
    },
  {{/each}}
  }
);



